/**
 * This class contains class (static) methods that will help you test the
 * Picture class methods. Uncomment the methods and the code in the main to
 * test.
 * 
 * @author Barbara Ericson
 */
public class PictureTester {
	/** Method to test zeroBlue */
	public static void testZeroBlue() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.zeroBlue();
		beach.explore();
	}

	public static void testZeroRed() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.zeroRed();
		beach.explore();
	}

	public static void testZeroGreen() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.zeroGreen();
		beach.explore();
	}

	/** Method to test mirrorVertical */
	public static void testMirrorVertical() {
		Picture caterpillar = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/caterpillar.jpg");
		caterpillar.explore();
		caterpillar.mirrorVertical();
		caterpillar.explore();
	}

	/** Method to test mirrorTemple */
	public static void testMirrorTemple() {
		Picture temple = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/temple.jpg");
		temple.explore();
		temple.mirrorTemple();
		temple.explore();
	}

	/** Method to test the collage method */
	public static void testCollage() {
		Picture canvas = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/640x480.jpg");
		canvas.createCollage();
		canvas.explore();
	}

	/** Method to test edgeDetection */
	public static void testEdgeDetection() {
		Picture swan = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/swan.jpg");
		swan.edgeDetection(10);
		swan.explore();
	}

	public static void testKeepOnlyBlue() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.keepOnlyBlue();
		beach.explore();
	}

	public static void testKeepOnlyRed() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.keepOnlyRed();
		beach.explore();
	}

	public static void testKeepOnlyGreen() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.keepOnlyGreen();
		beach.explore();
	}

	public static void testNegate() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.negate();
		beach.explore();
	}

	public static void testGrayscale() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.grayScale();
		beach.explore();
	}

	public static void testFixUnderwater() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/water.jpg");
		beach.explore();
		beach.fixUnderwater();
		beach.explore();
	}

	public static void testMirrorArms() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/snowman.jpg");
		beach.explore();
		beach.mirrorArms();
		beach.explore();
	}

	public static void testMirrorGull() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/seagull.jpg");
		beach.explore();
		beach.mirrorGull();
		beach.explore();
	}

	public static void testMirrorDiagonal() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.mirrorDiagonal();
		beach.explore();
	}

	public static void testCopy() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.explore();
		beach.copy(new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/flower1.jpg"), 0, 0);
		beach.explore();
	}

	public static void testBlur(int x, int y, int w, int h, int n) {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		for (int i=0;i<n; i++){
			beach.blur(x, y, w, h);
		}
		beach.explore();
	}
	public static void testencode() {
		Picture beach = new Picture("C:/Users/ant3384/Desktop/APCSA - Workspace/APCSA-Labs/Unit 16/src/beach.jpg");
		beach.encode(beach);
	}

	/**
	 * Main method for testing. Every class can have a main method in Java
	 */
	public static void main(String[] args) {
		// uncomment a call here to run a test
		// and comment out the ones you don't want
		// to run
		 //testZeroBlue();
		//testKeepOnlyBlue();
		// testKeepOnlyRed();
		// testKeepOnlyGreen();
		// testNegate();
		// testGrayscale();
		 //testFixUnderwater();
		// testMirrorVertical();
		// testMirrorTemple();
		 // testMirrorArms();
		//testMirrorGull();
		 //testMirrorDiagonal();
		// testCollage();
		 //testCopy();
		 //testEdgeDetection();
		 testBlur(200, 200, 200, 200, 2);
	
		//-------------------------------------------------------
	
		// testEdgeDetection2();
		// testChromakey();
		// testEncodeAndDecode();
		// testGetCountRedOverValue(250);
		// testSetRedToHalfValueInTopHalf();
		// testClearBlueOverValue(200);
		// testGetAverageForColumn(0);
		 testencode();
	}
}